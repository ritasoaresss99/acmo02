### ChIP-Seq

library(ChIPpeakAnno)

#read in the bed file
df1<-read.table("JMJD1C_peaks_filtered.bed", header=FALSE)

#convert the peaks to a GRanges object
gr1 <- GRanges(seqnames=df1$V1, ranges=IRanges(start=df1$V2, end=df1$V3))

##############
##annotation##
##############

library("EnsDb.Hsapiens.v86")

## create annotation file from EnsDb (Ensembl) or TxDb (transcript annotation) packages

annoData <- toGRanges(EnsDb.Hsapiens.v86, feature="gene")
annoData[1:2]

# annotate the peak GRanges object with peaks mapped to gene with a -2000 and 500 bp window around the TSS

anno.gr1 <- annotatePeakInBatch(gr1, 
                                AnnotationData=annoData, 
                                output="nearestBiDirectionalPromoters",
                                bindingRegion=c(-2000, 500))

#trim out of bound ranges
anno.gr1 <- trim(anno.gr1)

################################################
#INTERSECTION OF THE DEGs WITH THE ChIP RESULTS#
################################################

DEgs=readxl::read_xlsx("DEGs.xlsx")
venn=intersect(unlist(DEgs$...1),unlist(anno.gr1$gene_name))

library(data.table)

downreg=fread("table_downregulated.txt")
upreg=fread("table_upregulated.txt")

gene_nombre=as.data.frame(anno.gr1$gene_name)
inside_feature=as.data.frame(anno.gr1$insideFeature)
nombre_feature=cbind(gene_nombre,inside_feature)


upstream <- as.data.frame(nombre_feature$`anno.gr1$gene_name`[which(nombre_feature$`anno.gr1$insideFeature` == "upstream")])
inside <- as.data.frame(nombre_feature$`anno.gr1$gene_name`[which(nombre_feature$`anno.gr1$insideFeature` == "inside")]) #peak is inside the gene
overlapStart <- as.data.frame(nombre_feature$`anno.gr1$gene_name`[which(nombre_feature$`anno.gr1$insideFeature` == "overlapStart")])
includeFeature <- as.data.frame(nombre_feature$`anno.gr1$gene_name`[which(nombre_feature$`anno.gr1$insideFeature` == "includeFeature")]) #peak is larger than the gene

downreg_upstream=length(intersect(unlist(downreg),unlist(upstream)))
upreg_upstream=length(intersect(unlist(upreg),unlist(upstream)))

downreg_inside=length(intersect(unlist(downreg),unlist(inside)))
upreg_inside=length(intersect(unlist(upreg),unlist(inside)))

downreg_overlapStart=length(intersect(unlist(downreg),unlist(overlapStart)))
upreg_overlapStart=length(intersect(unlist(upreg),unlist(overlapStart)))

downreg_includeFeature=length(intersect(unlist(downreg),unlist(includeFeature)))
upreg_includeFeature=length(intersect(unlist(upreg),unlist(includeFeature)))

downreg_intersect=intersect(unlist(venn),unlist(downreg))
upreg_intersect=intersect(unlist(venn),unlist(upreg))

#we didn't see any tendency/relation for the binding site location and gene expression

library("VennDiagram")

#venn diagram with RNAseq DEGs and CHiPseq binding sites (save in TIFF format)
draw.pairwise.venn(
  area1 = 16583, #ChIP
  area2 = 2339, #DEGs
  cross.area = 1351,
  category = c("Binding Sites", "DEGs"),
  fill = c( "yellowgreen", "slateblue"), lty = "blank",
  cex = 2,
  cat.cex = 2,
  cat.pos = c(310, 105),
  cat.dist = 0.09,
  cat.just = list(c( -0.7, -1), c( 4,-9.5)),
  ext.pos = 30,
  ext.dist = -0.05,
  ext.length = 0.85,
  ext.line.lwd = 2,
  ext.line.lty = "dashed" , scaled = FALSE
)

library(gplots); library(RColorBrewer)
plotCol_exp <- brewer.pal(9, "Purples")[-1]
plotCol <- rep(c("yellowgreen", "gray"), each=2)
par(oma=c(0,0,0,6))
heatmap.2(logTPMs[c(upreg_intersect[1:10], downreg_intersect[1:10]),], scale="row", trace="none", density.info="none", ColSideColors = plotCol, col=plotCol_exp,labCol="")
heatmap.2(logTPMs[c(upreg_intersect[1:10], downreg_intersect[1:10]),], scale="none", trace="none", density.info="none", ColSideColors = plotCol, col=plotCol_exp,labCol="")

